# Generated by Django 5.0.4 on 2024-04-28 23:43

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('firstname', models.CharField(blank=True, max_length=255, null=True)),
                ('middlename', models.CharField(blank=True, max_length=255, null=True)),
                ('lastname', models.CharField(blank=True, max_length=255, null=True)),
                ('age_range', models.CharField(blank=True, max_length=255, null=True)),
                ('gender', models.CharField(blank=True, max_length=255, null=True)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_type', models.CharField(blank=True, max_length=255, null=True)),
                ('street_line_1', models.CharField(blank=True, max_length=255, null=True)),
                ('street_line_2', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=255, null=True)),
                ('state_code', models.CharField(blank=True, max_length=255, null=True)),
                ('country_code', models.CharField(blank=True, max_length=255, null=True)),
                ('lead_status', models.CharField(blank=True, max_length=255, null=True)),
                ('emails', models.JSONField(blank=True, null=True)),
                ('phones', models.JSONField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Contact',
                'verbose_name_plural': 'Contacts',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('company_domain_name', models.CharField(max_length=255)),
                ('industry', models.CharField(blank=True, max_length=100, null=True)),
                ('street_line_1', models.CharField(max_length=255)),
                ('street_line_2', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(max_length=100)),
                ('postal_code', models.CharField(max_length=20)),
                ('state', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_modified_date', models.DateTimeField(auto_now=True)),
                ('linkedin_company_page', models.URLField(blank=True, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('facebook_company_page', models.URLField(blank=True, null=True)),
                ('parent_company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subsidiaries', to='home.company')),
            ],
            options={
                'verbose_name': 'Company',
                'verbose_name_plural': 'Company',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('middlename', models.CharField(blank=True, max_length=30, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('mobile_number', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('birthdate', models.DateField(blank=True, null=True)),
                ('street_line_1', models.CharField(blank=True, max_length=255, null=True)),
                ('street_line_2', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=20, null=True)),
                ('state_code', models.CharField(blank=True, max_length=10, null=True)),
                ('linkedin', models.URLField(blank=True, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('license', models.CharField(blank=True, max_length=50, null=True)),
                ('license_state', models.CharField(blank=True, max_length=50, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='customuser_groups', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='customuser_permissions', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'User',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Incident',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('agency_id', models.CharField(max_length=100)),
                ('common_place_name', models.CharField(blank=True, max_length=255, null=True)),
                ('incident_type', models.CharField(max_length=100)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('public_location', models.BooleanField()),
                ('call_type', models.CharField(max_length=10)),
                ('is_shareable', models.BooleanField(default=True)),
                ('alarm_level', models.IntegerField()),
                ('call_received', models.DateTimeField()),
                ('address', models.CharField(max_length=255)),
                ('medical_emergency_address', models.CharField(blank=True, max_length=255, null=True)),
                ('address_truncated', models.BooleanField(default=False)),
                ('street_address', models.CharField(max_length=255)),
                ('address_line_2', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('state_code', models.CharField(max_length=10)),
                ('county', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
                ('country_code', models.CharField(max_length=10)),
                ('postcode', models.CharField(max_length=20)),
                ('housenumber', models.CharField(blank=True, max_length=50, null=True)),
                ('formatted_address', models.CharField(max_length=255)),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('timezone', models.CharField(max_length=50)),
                ('units', models.JSONField()),
                ('contacts', models.ManyToManyField(related_name='incident_contacts', to='home.contact')),
            ],
            options={
                'verbose_name': 'Incident',
                'verbose_name_plural': 'Incidents',
            },
        ),
        migrations.AddField(
            model_name='contact',
            name='incidents',
            field=models.ManyToManyField(related_name='related_contacts', to='home.incident'),
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('is_valid', models.BooleanField()),
                ('street_line_1', models.CharField(max_length=255)),
                ('street_line_2', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(max_length=100)),
                ('postal_code', models.CharField(max_length=20)),
                ('zip4', models.CharField(blank=True, max_length=20, null=True)),
                ('state_code', models.CharField(max_length=10)),
                ('country_code', models.CharField(max_length=10)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('is_active', models.BooleanField(blank=True, null=True)),
                ('is_commercial', models.BooleanField()),
                ('delivery_point', models.CharField(max_length=100)),
                ('contacts', models.ManyToManyField(related_name='locations_contacts', to='home.contact')),
            ],
            options={
                'verbose_name': 'Location',
                'verbose_name_plural': 'Location',
            },
        ),
        migrations.AddField(
            model_name='incident',
            name='locations',
            field=models.ManyToManyField(related_name='incident_locations', to='home.location'),
        ),
        migrations.CreateModel(
            name='Deal',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('deal_name', models.CharField(max_length=255)),
                ('projected_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('priority', models.IntegerField()),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('close_date', models.DateTimeField(blank=True, null=True)),
                ('deal_stage', models.CharField(max_length=100)),
                ('companies', models.ManyToManyField(related_name='deals', to='home.company')),
                ('contacts', models.ManyToManyField(related_name='deals', to='home.contact')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_deals', to=settings.AUTH_USER_MODEL)),
                ('incidents', models.ManyToManyField(related_name='deals', to='home.incident')),
                ('locations', models.ManyToManyField(related_name='deals', to='home.location')),
            ],
            options={
                'verbose_name': 'Deal',
                'verbose_name_plural': 'Deal',
            },
        ),
        migrations.AddField(
            model_name='contact',
            name='locations',
            field=models.ManyToManyField(related_name='contact_additional_locations', to='home.location'),
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pics/')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'UserProfile',
                'verbose_name_plural': 'UserProfile',
            },
        ),
    ]
